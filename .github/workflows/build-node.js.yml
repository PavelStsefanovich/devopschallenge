# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build Node.js App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 15.x
      BUCKET_NAME: dc-fullstacklab-app
      DIST_ID: E1VGLP0VQ85QZB

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_API_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_API_KEY_SECRET }}
        aws-region: us-east-1

    - name: Install dependencies
      working-directory: codebase/rdicidr-0.1.0
      run: npm ci

    - name: Run Lint
      working-directory: codebase/rdicidr-0.1.0
      run: npm run lint

    - name: Run Prettier
      working-directory: codebase/rdicidr-0.1.0
      run: npm run prettier

    - name: Run tests
      working-directory: codebase/rdicidr-0.1.0
      env:
        CI: 'true'
      run: npm test

    - name: Bulid Node.js App
      working-directory: codebase/rdicidr-0.1.0
      run: npm run build

    - name: Push to CloudFront
      working-directory: codebase/rdicidr-0.1.0
      run: aws s3 sync --delete build s3://${{ env.BUCKET_NAME }}

    - name: Invalidate CloudFront cache
      run: aws cloudfront create-invalidation --distribution-id ${{ env.DIST_ID }} --paths "/*"